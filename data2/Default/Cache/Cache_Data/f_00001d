{"version":3,"file":"algolia-plugins/2d39541a220d8db9fbf8.js","mappings":"uBAAIA,EACAC,E,KCAAC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QAIfJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAKH,IACxB,IAAII,EAASJ,GAAUA,EAAOK,WAC7B,IAAOL,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoBW,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRT,EAAoBW,EAAI,CAACP,EAASS,KACjC,IAAI,IAAIC,KAAOD,EACXb,EAAoBe,EAAEF,EAAYC,KAASd,EAAoBe,EAAEX,EAASU,IAC5EE,OAAOC,eAAeb,EAASU,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3Ed,EAAoBoB,EAAI,GAGxBpB,EAAoBqB,EAAKC,GACjBC,QAAQC,IAAIR,OAAOS,KAAKzB,EAAoBoB,GAAGM,QAAO,CAACC,EAAUb,KACvEd,EAAoBoB,EAAEN,GAAKQ,EAASK,GAC7BA,IACL,KCNJ3B,EAAoB4B,EAAKN,GAEZA,EAAL,2BCHRtB,EAAoB6B,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOX,GACR,GAAsB,iBAAXY,OAAqB,OAAOA,QALjB,GCAxBjC,EAAoBe,EAAI,CAACmB,EAAKC,IAAUnB,OAAOoB,UAAUC,eAAeC,KAAKJ,EAAKC,GPA9EtC,EAAa,GACbC,EAAoB,eAExBE,EAAoBuC,EAAI,CAACC,EAAKC,EAAM3B,EAAKQ,KACxC,GAAGzB,EAAW2C,GAAQ3C,EAAW2C,GAAKE,KAAKD,OAA3C,CACA,IAAIE,EAAQC,EACZ,QAAWzC,IAARW,EAEF,IADA,IAAI+B,EAAUC,SAASC,qBAAqB,UACpCC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAAK,CACvC,IAAIE,EAAIL,EAAQG,GAChB,GAAGE,EAAEC,aAAa,QAAUX,GAAOU,EAAEC,aAAa,iBAAmBrD,EAAoBgB,EAAK,CAAE6B,EAASO,EAAG,OAG1GP,IACHC,GAAa,GACbD,EAASG,SAASM,cAAc,WAEzBC,QAAU,QACjBV,EAAOW,QAAU,IACbtD,EAAoBuD,IACvBZ,EAAOa,aAAa,QAASxD,EAAoBuD,IAElDZ,EAAOa,aAAa,eAAgB1D,EAAoBgB,GACxD6B,EAAOc,IAAMjB,GAEd3C,EAAW2C,GAAO,CAACC,GACnB,IAAIiB,EAAmB,CAACC,EAAMC,KAE7BjB,EAAOkB,QAAUlB,EAAOmB,OAAS,KACjCC,aAAaT,GACb,IAAIU,EAAUnE,EAAW2C,GAIzB,UAHO3C,EAAW2C,GAClBG,EAAOsB,YAActB,EAAOsB,WAAWC,YAAYvB,GACnDqB,GAAWA,EAAQG,SAASC,GAAQA,EAAGR,KACpCD,EAAM,OAAOA,EAAKC,IAElBN,EAAUe,WAAWX,EAAiBY,KAAK,UAAMnE,EAAW,CAAEoE,KAAM,UAAWC,OAAQ7B,IAAW,MACtGA,EAAOkB,QAAUH,EAAiBY,KAAK,KAAM3B,EAAOkB,SACpDlB,EAAOmB,OAASJ,EAAiBY,KAAK,KAAM3B,EAAOmB,QACnDlB,GAAcE,SAAS2B,KAAKC,YAAY/B,KQtCzC3C,EAAoB2E,EAAKvE,IACH,oBAAXwE,QAA0BA,OAAOC,aAC1C7D,OAAOC,eAAeb,EAASwE,OAAOC,YAAa,CAAEC,MAAO,WAE7D9D,OAAOC,eAAeb,EAAS,aAAc,CAAE0E,OAAO,K,MCLvD,IAAIC,EACA/E,EAAoB6B,EAAEmD,gBAAeD,EAAY/E,EAAoB6B,EAAEoD,SAAW,IACtF,IAAInC,EAAW9C,EAAoB6B,EAAEiB,SACrC,IAAKiC,GAAajC,IACbA,EAASoC,gBACZH,EAAYjC,EAASoC,cAAczB,MAC/BsB,GAAW,CACf,IAAIlC,EAAUC,EAASC,qBAAqB,UAC5C,GAAGF,EAAQI,OAEV,IADA,IAAID,EAAIH,EAAQI,OAAS,EAClBD,GAAK,IAAM+B,GAAWA,EAAYlC,EAAQG,KAAKS,IAMzD,IAAKsB,EAAW,MAAM,IAAII,MAAM,yDAChCJ,EAAYA,EAAUK,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFpF,EAAoBqF,EAAIN,EAAY,O,SCbpC,IAAIO,EAAkB,CACrB,IAAK,GAGNtF,EAAoBoB,EAAEmE,EAAI,CAACjE,EAASK,KAElC,IAAI6D,EAAqBxF,EAAoBe,EAAEuE,EAAiBhE,GAAWgE,EAAgBhE,QAAWnB,EACtG,GAA0B,IAAvBqF,EAGF,GAAGA,EACF7D,EAASe,KAAK8C,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAIlE,SAAQ,CAACmE,EAASC,IAAYH,EAAqBF,EAAgBhE,GAAW,CAACoE,EAASC,KAC1GhE,EAASe,KAAK8C,EAAmB,GAAKC,GAGtC,IAAIjD,EAAMxC,EAAoBqF,EAAIrF,EAAoB4B,EAAEN,GAEpDsE,EAAQ,IAAIT,MAgBhBnF,EAAoBuC,EAAEC,GAfFoB,IACnB,GAAG5D,EAAoBe,EAAEuE,EAAiBhE,KAEf,KAD1BkE,EAAqBF,EAAgBhE,MACRgE,EAAgBhE,QAAWnB,GACrDqF,GAAoB,CACtB,IAAIK,EAAYjC,IAAyB,SAAfA,EAAMW,KAAkB,UAAYX,EAAMW,MAChEuB,EAAUlC,GAASA,EAAMY,QAAUZ,EAAMY,OAAOf,IACpDmC,EAAMG,QAAU,iBAAmBzE,EAAU,cAAgBuE,EAAY,KAAOC,EAAU,IAC1FF,EAAMI,KAAO,iBACbJ,EAAMrB,KAAOsB,EACbD,EAAMK,QAAUH,EAChBN,EAAmB,GAAGI,MAIgB,SAAWtE,EAASA,KAiBlE,IAAI4E,EAAuB,CAACC,EAA4BC,KACvD,IAGInG,EAAUqB,GAHT+E,EAAUC,EAAaC,GAAWH,EAGhBpD,EAAI,EAC3B,GAAGqD,EAASG,MAAMC,GAAgC,IAAxBnB,EAAgBmB,KAAa,CACtD,IAAIxG,KAAYqG,EACZtG,EAAoBe,EAAEuF,EAAarG,KACrCD,EAAoBO,EAAEN,GAAYqG,EAAYrG,IAGhD,GAAGsG,EAAsBA,EAAQvG,GAGlC,IADGmG,GAA4BA,EAA2BC,GACrDpD,EAAIqD,EAASpD,OAAQD,IACzB1B,EAAU+E,EAASrD,GAChBhD,EAAoBe,EAAEuE,EAAiBhE,IAAYgE,EAAgBhE,IACrEgE,EAAgBhE,GAAS,KAE1BgE,EAAgBhE,GAAW,GAKzBoF,EAAqBC,KAA8B,wBAAIA,KAA8B,yBAAK,GAC9FD,EAAmBvC,QAAQ+B,EAAqB5B,KAAK,KAAM,IAC3DoC,EAAmBhE,KAAOwD,EAAqB5B,KAAK,KAAMoC,EAAmBhE,KAAK4B,KAAKoC,K,mCCpFhF,MAAME,EAAoB,6BAEpBC,EAAgC,UAKhCC,EAAkB,CAC7B3F,IAAML,GACSmB,OAAO8E,aAAaC,QAAQlG,GAG3CmG,IAAK,CAACnG,EAAagE,IACV7C,OAAO8E,aAAaG,QAAQpG,EAAKgE,IC2B5C,ECzCO,SAA4BjE,GAC/B,MAAMsG,EAAU,MAAQC,UACC,+BACPC,gBAAgBxG,EAAYuG,EAAUA,EAASE,eAAiB,IAGlF,OADAH,EAAQI,WAAa1G,EAAWmF,KACzBmB,EDmCX,CAhCuE,CACrEnB,KAAM,kBACNwB,KAAM,0BACNC,KAAM,SACNL,SAAU,CACRM,uBAAwB,CACtBC,MAAO,2BACPC,YAAa,+EACbrD,KAAM,SACNsD,QAAShB,EACTiB,UAAU,IAGdC,WAAYC,OAASC,UAAAA,EAAWb,SAAAA,MAC9B,MAAMc,EAAWD,EAAUC,SAAwDpB,EAI7EqB,EAFY,IAAIC,gBAAgBnG,OAAOgD,SAASoD,QAG1ClH,IAAIiG,EAASM,wBAA0Bb,IAAkC,KAMrF,OAJIsB,GACFD,EAAQjB,IAAIL,EAAmBuB,GAG1B,IAETG,QAAS,CACPC,cE/B2D,CAC7DC,MAAO,yBACPZ,YAAa,gEACba,SAAU,MACVC,QAAQ,EACRC,oBAAqB,2FACrBC,OAAQ,GACRC,cAAe,aACfC,QAAS,CAACC,GAAKC,QAAAA,EAASf,UAAAA,MACtB,MAEMgB,GAFWhB,EAAUC,SAAwDpB,GAE3C3F,IAAIyF,GAE5C,GAAIqC,KAAiD,IAApCD,EAAQpF,MAAMsF,cAAcC,KAAiBH,EAAQpF,MAAMsF,aAAa,+BAAgC,CACvH,MAAME,EAA2C,GACjDA,EAA4C,SAAIH,EAChDD,EAAQK,YAAY,0CAA2CD,S","sources":["webpack://Destination/webpack/runtime/load script","webpack://Destination/webpack/bootstrap","webpack://Destination/webpack/runtime/compat get default export","webpack://Destination/webpack/runtime/define property getters","webpack://Destination/webpack/runtime/ensure chunk","webpack://Destination/webpack/runtime/get javascript chunk filename","webpack://Destination/webpack/runtime/global","webpack://Destination/webpack/runtime/hasOwnProperty shorthand","webpack://Destination/webpack/runtime/make namespace object","webpack://Destination/webpack/runtime/publicPath","webpack://Destination/webpack/runtime/jsonp chunk loading","webpack://Destination/./destinations/algolia-plugins/src/utils.ts","webpack://Destination/./destinations/algolia-plugins/src/index.ts","webpack://Destination/../browser-destination-runtime/dist/esm/shim.js","webpack://Destination/./destinations/algolia-plugins/src/algoliaPlugin/index.ts"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"Destination:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"/\" + \"431110629a9fe8297174\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t962: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkDestination\"] = self[\"webpackChunkDestination\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// The name of the storage location where we'll cache the Query ID value\nexport const storageQueryIdKey = 'analytics_algolia_query_id'\n\nexport const queryIdQueryStringNameDefault = 'queryID'\n\n// The field name to include for the Algolia query_id in 'context.integrations.Algolia Insights (Actions)'\nexport const queryIdIntegrationFieldName = 'query_id'\n\nexport const storageFallback = {\n  get: (key: string) => {\n    const data = window.localStorage.getItem(key)\n    return data\n  },\n  set: (key: string, value: string) => {\n    return window.localStorage.setItem(key, value)\n  }\n}\n","import type { Settings } from './generated-types'\nimport type { BrowserDestinationDefinition } from '@segment/browser-destination-runtime/types'\nimport { browserDestination } from '@segment/browser-destination-runtime/shim'\nimport { UniversalStorage } from '@segment/analytics-next'\nimport { storageFallback, storageQueryIdKey, queryIdQueryStringNameDefault } from './utils'\n\nimport algoliaPlugin from './algoliaPlugin'\n\n// Switch from unknown to the partner SDK client types\nexport const destination: BrowserDestinationDefinition<Settings, {}> = {\n  name: 'Algolia Plugins',\n  slug: 'actions-algolia-plugins',\n  mode: 'device',\n  settings: {\n    queryIdQueryStringName: {\n      label: 'QueryID QueryString Name',\n      description: 'QueryString name you use for when storing the Algolia QueryID in a page URL.',\n      type: 'string',\n      default: queryIdQueryStringNameDefault,\n      required: false\n    }\n  },\n  initialize: async ({ analytics, settings }) => {\n    const storage = (analytics.storage as UniversalStorage<Record<string, string>>) ?? storageFallback\n\n    const urlParams = new URLSearchParams(window.location.search)\n\n    const queryId: string | null =\n      urlParams.get(settings.queryIdQueryStringName ?? queryIdQueryStringNameDefault) || null\n\n    if (queryId) {\n      storage.set(storageQueryIdKey, queryId)\n    }\n\n    return {}\n  },\n  actions: {\n    algoliaPlugin\n  }\n}\n\nexport default browserDestination(destination)\n","export function browserDestination(definition) {\n    const factory = (async (settings) => {\n        const plugin = await import('./plugin');\n        return plugin.generatePlugins(definition, settings, settings.subscriptions || []);\n    });\n    factory.pluginName = definition.name;\n    return factory;\n}\n//# sourceMappingURL=shim.js.map","import type { BrowserActionDefinition } from '@segment/browser-destination-runtime/types'\nimport type { Settings } from '../generated-types'\nimport type { Payload } from './generated-types'\nimport { UniversalStorage } from '@segment/analytics-next'\nimport { storageFallback, storageQueryIdKey, queryIdIntegrationFieldName } from '../utils'\n\nconst action: BrowserActionDefinition<Settings, {}, Payload> = {\n  title: 'Algolia Browser Plugin',\n  description: 'Enriches all Segment payloads with the Algolia query_id value',\n  platform: 'web',\n  hidden: false,\n  defaultSubscription: 'type = \"track\" or type = \"identify\" or type = \"page\" or type = \"group\" or type = \"alias\"',\n  fields: {},\n  lifecycleHook: 'enrichment',\n  perform: (_, { context, analytics }) => {\n    const storage = (analytics.storage as UniversalStorage<Record<string, string>>) ?? storageFallback\n\n    const query_id: string | null = storage.get(storageQueryIdKey)\n\n    if (query_id && (context.event.integrations?.All !== false || context.event.integrations['Algolia Insights (Actions)'])) {\n      const integrationsData: Record<string, string> = {}\n      integrationsData[queryIdIntegrationFieldName] = query_id\n      context.updateEvent(`integrations.Algolia Insights (Actions)`, integrationsData)\n    }\n  \n    return\n  }\n}\n\nexport default action\n"],"names":["inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","Error","replace","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","self","storageQueryIdKey","queryIdQueryStringNameDefault","storageFallback","localStorage","getItem","set","setItem","factory","settings","generatePlugins","subscriptions","pluginName","slug","mode","queryIdQueryStringName","label","description","default","required","initialize","async","analytics","storage","queryId","URLSearchParams","search","actions","algoliaPlugin","title","platform","hidden","defaultSubscription","fields","lifecycleHook","perform","_","context","query_id","integrations","All","integrationsData","updateEvent"],"sourceRoot":""}